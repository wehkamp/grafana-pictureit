{"version":3,"sources":["../src/pictureit_ctrl.js"],"names":["_","MetricsPanelCtrl","kbn","Emitter","panelDefaults","valueMaps","seriesList","series","bgimage","sensors","height","width","PictureItCtrl","$scope","$injector","defaults","panel","bindThis","events","on","onInitEditMode","bind","render","onDataReceived","hiddenImg","Image","addEventListener","refImageSize","w","naturalWidth","h","naturalHeight","refId","src","dataList","dataListLength","length","push","name","target","value","datapoints","index","splice","xlocation","ylocation","format","decimals","bgcolor","color","size","currentSize","bordercolor","visible","lastSensor","subItem","addEditorTab","scope","elem","attrs","ctrl","$panelContainer","find","pixelStrToNum","str","parseInt","substr","refImage","document","getElementById","clientHeight","clientWidth","style","css","sensorsLength","valueMapsLength","imageHeight","imageWidth","originalHeight","originalWidth","spanRatio","span","sensor","calculatedYPos","Math","pow","calculatedXPos","ylocationStr","toString","xlocationStr","lastSize","sizeStr","valueMap","valueFormatted","valueFormats","renderingCompleted","templateUrl"],"mappings":"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","file":"pictureit_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport './sprintf.js';\nimport './angular-sprintf.js';\nimport kbn from 'app/core/utils/kbn';\n\nimport { Emitter } from 'app/core/core';\n\nconst panelDefaults = {\n    valueMaps: [],\n    seriesList: [],\n    series: [],\n    bgimage: '',\n    sensors: [],\n    height: '400px',\n    width: '100px'\n};\n\nexport class PictureItCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector) {\n        super($scope, $injector);\n        _.defaults(this.panel, panelDefaults);\n        var bindThis = this;\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-initialized', this.render.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.hiddenImg = new Image();\n        this.hiddenImg.addEventListener(\"load\", function () {\n            bindThis.refImageSize = { w: this.naturalWidth, h: this.naturalHeight }\n        });\n        this.refId=$scope['$id'];\n        this.hiddenImg.src = this.panel.bgimage;\n    }\n\n    onDataReceived(dataList) {\n        var dataListLength = dataList.length;\n        this.panel.valueMaps = [];\n        for (var series = 0; series < dataListLength; series++) {\n            this.panel.valueMaps.push({\n                name: dataList[series].target,\n                value: dataList[series].datapoints[dataList[series].datapoints.length - 1][0]\n            });\n        }\n\n        this.render();\n    }\n\n    deleteSensor(index) {\n        this.panel.sensors.splice(index, 1);\n    }\n\n    addSensor() {\n        if (this.panel.sensors.length == 0)\n            this.panel.sensors.push({\n                name: 'A-series',\n                xlocation: 200,\n                ylocation: 200,\n                format: 'none',\n                decimals: 'auto',\n                bgcolor: 'rgba(0, 0, 0, 0.58)',\n                color: '#FFFFFF',\n                size: 22,\n                currentSize: 22,\n                bordercolor: 'rgb(251, 4, 4)',\n                visible: true\n            });\n        else {\n            var lastSensor = this.panel.sensors[this.panel.sensors.length - 1];\n\n            this.panel.sensors.push({\n                name: lastSensor.name,\n                xlocation: 200,\n                ylocation: 200,\n                format: lastSensor.format,\n                decimals: lastSensor.decimals,\n                bgcolor: lastSensor.bgcolor,\n                color: lastSensor.color,\n                size: lastSensor.size,\n                currentSize: lastSensor.size,\n                bordercolor: lastSensor.bordercolor,\n                visible: true\n            });\n        }\n    }\n\n    setUnitFormat(subItem, index) {\n        this.panel.sensors[index].format = subItem.value;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/bessler-pictureit-panel/editor.html', 2);\n\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        var sensors;\n        var valueMaps;\n\n        const $panelContainer = elem.find('.panel-container');\n\n        function pixelStrToNum(str) {\n            return parseInt(str.substr(0, str.length - 2));\n        }\n\n        function render() {\n            if (!ctrl.panel.sensors) {\n                return;\n            }\n            var refImage = document.getElementById('pictureit-'+ctrl.refId);\n            if (!refImage) {\n                return;\n            }\n            if (refImage.clientHeight > refImage.clientWidth) {\n                refImage.style = \"width: auto; visibility: hidden; position: absolute\";\n            }\n\n            refImage.style = 'width:100%';\n            var width = pixelStrToNum($panelContainer.css(\"width\"));\n            var height = pixelStrToNum($panelContainer.css(\"height\"));\n            sensors = ctrl.panel.sensors;\n            valueMaps = ctrl.panel.valueMaps;\n            var sensorsLength = sensors.length;\n            var valueMapsLength = valueMaps.length;\n            var imageHeight = refImage.clientHeight;\n            var imageWidth = refImage.clientWidth;\n            var originalHeight = ctrl.refImageSize.h;\n            var originalWidth = ctrl.refImageSize.w;\n            var spanRatio = 1 - (ctrl.panel.span / 12);\n\n            ctrl.panel.height = imageHeight;\n            if($panelContainer.length > 0){\n                $panelContainer[0].style='min-height: auto';\n            }\n            for (var sensor = 0; sensor < sensorsLength; sensor++) {\n                sensors[sensor].visible = sensors[sensor].xlocation < width && sensors[sensor].ylocation < height;\n                var calculatedYPos = (imageHeight * sensors[sensor].ylocation / originalHeight) + Math.pow((2), spanRatio * 5);\n                var calculatedXPos = (imageWidth * sensors[sensor].xlocation / originalWidth)  + Math.pow((2), spanRatio * 2);\n                sensors[sensor].ylocationStr = calculatedYPos.toString() + \"px\";\n                sensors[sensor].xlocationStr = calculatedXPos.toString() + \"px\";\n                sensors[sensor].lastSize = imageWidth * sensors[sensor].size / originalWidth;\n                sensors[sensor].sizeStr = imageWidth * sensors[sensor].size / originalWidth + \"px\";\n                for (var valueMap = 0; valueMap < valueMapsLength; valueMap++) {\n                    if (sensors[sensor].name == valueMaps[valueMap].name) {\n                        sensors[sensor].valueFormatted = kbn.valueFormats[sensors[sensor].format](valueMaps[valueMap].value, sensors[sensor].decimals, null);\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.events.on('render', function () {\n            render();\n            ctrl.renderingCompleted();\n        });\n    }\n}\n\nPictureItCtrl.templateUrl = 'module.html';\n"]}