{"version":3,"sources":["../src/pictureit_ctrl.js"],"names":["_","MetricsPanelCtrl","kbn","Emitter","panelDefaults","valueMaps","seriesList","series","bgimage","sensors","height","width","PictureItCtrl","$scope","$injector","defaults","panel","bindThis","events","on","onInitEditMode","bind","render","onDataReceived","hiddenImg","Image","addEventListener","refImageSize","w","naturalWidth","h","naturalHeight","src","dataList","dataListLength","length","push","name","target","value","datapoints","index","splice","xlocation","ylocation","format","decimals","bgcolor","color","size","currentSize","bordercolor","visible","lastSensor","subItem","addEditorTab","editModeInterval","refresher","setInterval","emit","scope","elem","attrs","ctrl","$panelContainer","find","pixelStrToNum","str","parseInt","substr","editMode","clearInterval","refImage","document","getElementById","clientHeight","clientWidth","style","css","sensorsLength","valueMapsLength","imageHeight","imageWidth","originalHeight","originalWidth","sensor","calculatedYPos","calculatedXPos","ylocationStr","toString","xlocationStr","lastSize","sizeStr","valueMap","valueFormatted","valueFormats","renderingCompleted","templateUrl"],"mappings":"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","file":"pictureit_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport './sprintf.js';\nimport './angular-sprintf.js';\nimport kbn from 'app/core/utils/kbn';\n\nimport { Emitter } from 'app/core/core';\n\nconst panelDefaults = {\n    valueMaps: [],\n    seriesList: [],\n    series: [],\n    bgimage: '',\n    sensors: [],\n    height: '400px',\n    width: '100px'\n};\n\nexport class PictureItCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector) {\n        super($scope, $injector);\n        _.defaults(this.panel, panelDefaults);\n        var bindThis = this;\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n        this.events.on('panel-initialized', this.render.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.hiddenImg = new Image();\n        this.hiddenImg.addEventListener(\"load\", function () {\n            bindThis.refImageSize= {w: this.naturalWidth, h:this.naturalHeight}\n        });\n        this.hiddenImg.src = this.panel.bgimage;\n    }\n\n    onDataReceived(dataList) {\n        var dataListLength = dataList.length;\n        this.panel.valueMaps = [];\n        for (var series = 0; series < dataListLength; series++) {\n            this.panel.valueMaps.push({\n                name: dataList[series].target,\n                value: dataList[series].datapoints[dataList[series].datapoints.length - 1][0]\n            });\n        }\n\n        this.render();\n    }\n\n    deleteSensor(index) {\n        this.panel.sensors.splice(index, 1);\n    }\n\n    addSensor() {\n        if (this.panel.sensors.length == 0)\n            this.panel.sensors.push({\n                name: 'A-series',\n                xlocation: 200,\n                ylocation: 200,\n                format: 'none',\n                decimals: 'auto',\n                bgcolor: 'rgba(0, 0, 0, 0.58)',\n                color: '#FFFFFF',\n                size: 22,\n                currentSize: 22,\n                bordercolor: 'rgb(251, 4, 4)',\n                visible: true\n            });\n        else {\n            var lastSensor = this.panel.sensors[this.panel.sensors.length - 1];\n\n            this.panel.sensors.push({\n                name: lastSensor.name,\n                xlocation: 200,\n                ylocation: 200,\n                format: lastSensor.format,\n                decimals: lastSensor.decimals,\n                bgcolor: lastSensor.bgcolor,\n                color: lastSensor.color,\n                size: lastSensor.size,\n                currentSize: lastSensor.size,\n                bordercolor: lastSensor.bordercolor,\n                visible: true\n            });\n        }\n    }\n\n    setUnitFormat(subItem, index) {\n        this.panel.sensors[index].format = subItem.value;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('Options', 'public/plugins/bessler-pictureit-panel/editor.html', 2);\n        var bindThis = this;\n        this.editModeInterval = true;\n        this.refresher = setInterval(function() {\n            bindThis.events.emit('panel-initialized');\n        }, 1000);\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        var sensors;\n        var valueMaps;\n\n        const $panelContainer = elem.find('.panel-container');\n\n        function pixelStrToNum(str) {\n            return parseInt(str.substr(0, str.length - 2));\n        }\n\n        function render() {\n            if (!ctrl.panel.sensors) {\n                return;\n            }\n            if (ctrl.editMode && !ctrl.editModeInterval) {\n                ctrl.editModeInterval = true;\n                ctrl.refresher = setInterval(function() {\n                    ctrl.events.emit('panel-initialized');\n                }, 1000);\n            } else if (!ctrl.editMode) {\n                ctrl.editModeInterval = false;\n                clearInterval(ctrl.refresher);\n            }\n            var refImage = document.getElementById('imageRef');\n            if(!refImage){\n                return;\n            }\n                if(refImage.clientHeight > refImage.clientWidth){\n                    refImage.style = \"width: auto; visibility: hidden; position: absolute\";\n                }\n            var width = pixelStrToNum($panelContainer.css(\"width\"));\n            var height = pixelStrToNum($panelContainer.css(\"height\"));\n\n            sensors = ctrl.panel.sensors;\n            valueMaps = ctrl.panel.valueMaps;\n            var sensorsLength = sensors.length;\n            var valueMapsLength = valueMaps.length;\n            var imageHeight = refImage.clientHeight;\n            var imageWidth = refImage.clientWidth;\n            var originalHeight = ctrl.refImageSize.h;\n            var originalWidth = ctrl.refImageSize.w;\n            for (var sensor = 0; sensor < sensorsLength; sensor++) {\n                sensors[sensor].visible = sensors[sensor].xlocation < width && sensors[sensor].ylocation < height;\n                var calculatedYPos = imageHeight * sensors[sensor].ylocation / originalHeight;\n                var calculatedXPos = imageWidth * sensors[sensor].xlocation / originalWidth;\n                sensors[sensor].ylocationStr = (calculatedYPos).toString() + \"px\";\n                sensors[sensor].xlocationStr = (calculatedXPos).toString() + \"px\";\n                sensors[sensor].lastSize = imageWidth * sensors[sensor].size / originalWidth;\n                sensors[sensor].sizeStr = imageWidth * sensors[sensor].size / originalWidth + \"px\";\n                for (var valueMap = 0; valueMap < valueMapsLength; valueMap++) {\n                    if (sensors[sensor].name == valueMaps[valueMap].name) {\n                        sensors[sensor].valueFormatted = kbn.valueFormats[sensors[sensor].format](valueMaps[valueMap].value, sensors[sensor].decimals, null);\n                        break;\n                    }\n                }\n            }\n\n        }\n\n        this.events.on('render', function () {\n            render();\n            ctrl.renderingCompleted();\n        });\n    }\n}\n\nPictureItCtrl.templateUrl = 'module.html';\n"]}